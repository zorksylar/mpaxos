/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_mpaxos_2eproto__INCLUDED
#define PROTOBUF_C_mpaxos_2eproto__INCLUDED

//#include <google/protobuf-c/protobuf-c.h>
#include "protobuf-c.h"

PROTOBUF_C_BEGIN_DECLS


typedef struct _Mpaxos__ProcessidT Mpaxos__ProcessidT;
typedef struct _Mpaxos__InstidT Mpaxos__InstidT;
typedef struct _Mpaxos__RoundidT Mpaxos__RoundidT;
typedef struct _Mpaxos__MsgHeader Mpaxos__MsgHeader;
typedef struct _Mpaxos__CodedValueT Mpaxos__CodedValueT;
typedef struct _Mpaxos__Proposal Mpaxos__Proposal;
typedef struct _Mpaxos__ResponseT Mpaxos__ResponseT;
typedef struct _Mpaxos__MsgCommon Mpaxos__MsgCommon;
typedef struct _Mpaxos__MsgPrepare Mpaxos__MsgPrepare;
typedef struct _Mpaxos__MsgPromise Mpaxos__MsgPromise;
typedef struct _Mpaxos__MsgAccept Mpaxos__MsgAccept;
typedef struct _Mpaxos__MsgAccepted Mpaxos__MsgAccepted;
typedef struct _Mpaxos__MsgLearn Mpaxos__MsgLearn;
typedef struct _Mpaxos__MsgDecide Mpaxos__MsgDecide;
typedef struct _Mpaxos__MsgSlot Mpaxos__MsgSlot;


/* --- enums --- */

typedef enum _Mpaxos__MsgHeader__MsgtypeT {
  MPAXOS__MSG_HEADER__MSGTYPE_T__PREPARE = 0,
  MPAXOS__MSG_HEADER__MSGTYPE_T__PROMISE = 1,
  MPAXOS__MSG_HEADER__MSGTYPE_T__ACCEPT = 2,
  MPAXOS__MSG_HEADER__MSGTYPE_T__ACCEPTED = 3,
  MPAXOS__MSG_HEADER__MSGTYPE_T__LEARN = 4,
  MPAXOS__MSG_HEADER__MSGTYPE_T__DECIDE = 5,
  MPAXOS__MSG_HEADER__MSGTYPE_T__SLOT = 6
} Mpaxos__MsgHeader__MsgtypeT;
typedef enum _Mpaxos__AckEnum {
  MPAXOS__ACK_ENUM__SUCCESS = 0,
  MPAXOS__ACK_ENUM__ERR_BID = 1
} Mpaxos__AckEnum;

/* --- messages --- */

struct  _Mpaxos__ProcessidT
{
  ProtobufCMessage base;
  uint32_t gid;
  uint32_t nid;
};
#define MPAXOS__PROCESSID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__processid_t__descriptor) \
    , 0, 0 }


struct  _Mpaxos__InstidT
{
  ProtobufCMessage base;
  uint32_t gid;
  uint64_t sid;
};
#define MPAXOS__INSTID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__instid_t__descriptor) \
    , 0, 0 }


struct  _Mpaxos__RoundidT
{
  ProtobufCMessage base;
  uint32_t gid;
  uint64_t sid;
  uint64_t bid;
};
#define MPAXOS__ROUNDID_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__roundid_t__descriptor) \
    , 0, 0, 0 }


struct  _Mpaxos__MsgHeader
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader__MsgtypeT t;
  uint32_t nid;
  uint64_t tid;
};
#define MPAXOS__MSG_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_header__descriptor) \
    , 0, 0, 0 }


struct  _Mpaxos__CodedValueT
{
  ProtobufCMessage base;
  uint32_t sz;
  uint32_t k;
  uint32_t n;
  uint32_t id;
  ProtobufCBinaryData value;
};
#define MPAXOS__CODED_VALUE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__coded_value_t__descriptor) \
    , 0, 0, 0, 0, {0,NULL} }


struct  _Mpaxos__Proposal
{
  ProtobufCMessage base;
  size_t n_rids;
  Mpaxos__RoundidT **rids;
  uint64_t tid;
  uint32_t nid;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
  Mpaxos__CodedValueT *coded_value;
};
#define MPAXOS__PROPOSAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__proposal__descriptor) \
    , 0,NULL, 0, 0, 0,{0,NULL}, NULL }


struct  _Mpaxos__ResponseT
{
  ProtobufCMessage base;
  Mpaxos__RoundidT *rid;
  Mpaxos__AckEnum ack;
  size_t n_props;
  Mpaxos__Proposal **props;
};
#define MPAXOS__RESPONSE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__response_t__descriptor) \
    , NULL, 0, 0,NULL }


struct  _Mpaxos__MsgCommon
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
};
#define MPAXOS__MSG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_common__descriptor) \
    , NULL }


struct  _Mpaxos__MsgPrepare
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  size_t n_rids;
  Mpaxos__RoundidT **rids;
};
#define MPAXOS__MSG_PREPARE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_prepare__descriptor) \
    , NULL, 0,NULL }


struct  _Mpaxos__MsgPromise
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  size_t n_ress;
  Mpaxos__ResponseT **ress;
};
#define MPAXOS__MSG_PROMISE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_promise__descriptor) \
    , NULL, 0,NULL }


struct  _Mpaxos__MsgAccept
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  Mpaxos__Proposal *prop;
};
#define MPAXOS__MSG_ACCEPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_accept__descriptor) \
    , NULL, NULL }


struct  _Mpaxos__MsgAccepted
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  size_t n_ress;
  Mpaxos__ResponseT **ress;
};
#define MPAXOS__MSG_ACCEPTED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_accepted__descriptor) \
    , NULL, 0,NULL }


struct  _Mpaxos__MsgLearn
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  size_t n_rids;
  Mpaxos__RoundidT **rids;
};
#define MPAXOS__MSG_LEARN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_learn__descriptor) \
    , NULL, 0,NULL }


struct  _Mpaxos__MsgDecide
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
  Mpaxos__Proposal *prop;
};
#define MPAXOS__MSG_DECIDE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_decide__descriptor) \
    , NULL, NULL }


struct  _Mpaxos__MsgSlot
{
  ProtobufCMessage base;
  Mpaxos__MsgHeader *h;
};
#define MPAXOS__MSG_SLOT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mpaxos__msg_slot__descriptor) \
    , NULL }


/* Mpaxos__ProcessidT methods */
void   mpaxos__processid_t__init
                     (Mpaxos__ProcessidT         *message);
size_t mpaxos__processid_t__get_packed_size
                     (const Mpaxos__ProcessidT   *message);
size_t mpaxos__processid_t__pack
                     (const Mpaxos__ProcessidT   *message,
                      uint8_t             *out);
size_t mpaxos__processid_t__pack_to_buffer
                     (const Mpaxos__ProcessidT   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__ProcessidT *
       mpaxos__processid_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__processid_t__free_unpacked
                     (Mpaxos__ProcessidT *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__InstidT methods */
void   mpaxos__instid_t__init
                     (Mpaxos__InstidT         *message);
size_t mpaxos__instid_t__get_packed_size
                     (const Mpaxos__InstidT   *message);
size_t mpaxos__instid_t__pack
                     (const Mpaxos__InstidT   *message,
                      uint8_t             *out);
size_t mpaxos__instid_t__pack_to_buffer
                     (const Mpaxos__InstidT   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__InstidT *
       mpaxos__instid_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__instid_t__free_unpacked
                     (Mpaxos__InstidT *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__RoundidT methods */
void   mpaxos__roundid_t__init
                     (Mpaxos__RoundidT         *message);
size_t mpaxos__roundid_t__get_packed_size
                     (const Mpaxos__RoundidT   *message);
size_t mpaxos__roundid_t__pack
                     (const Mpaxos__RoundidT   *message,
                      uint8_t             *out);
size_t mpaxos__roundid_t__pack_to_buffer
                     (const Mpaxos__RoundidT   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__RoundidT *
       mpaxos__roundid_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__roundid_t__free_unpacked
                     (Mpaxos__RoundidT *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgHeader methods */
void   mpaxos__msg_header__init
                     (Mpaxos__MsgHeader         *message);
size_t mpaxos__msg_header__get_packed_size
                     (const Mpaxos__MsgHeader   *message);
size_t mpaxos__msg_header__pack
                     (const Mpaxos__MsgHeader   *message,
                      uint8_t             *out);
size_t mpaxos__msg_header__pack_to_buffer
                     (const Mpaxos__MsgHeader   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgHeader *
       mpaxos__msg_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_header__free_unpacked
                     (Mpaxos__MsgHeader *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__CodedValueT methods */
void   mpaxos__coded_value_t__init
                     (Mpaxos__CodedValueT         *message);
size_t mpaxos__coded_value_t__get_packed_size
                     (const Mpaxos__CodedValueT   *message);
size_t mpaxos__coded_value_t__pack
                     (const Mpaxos__CodedValueT   *message,
                      uint8_t             *out);
size_t mpaxos__coded_value_t__pack_to_buffer
                     (const Mpaxos__CodedValueT   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__CodedValueT *
       mpaxos__coded_value_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__coded_value_t__free_unpacked
                     (Mpaxos__CodedValueT *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__Proposal methods */
void   mpaxos__proposal__init
                     (Mpaxos__Proposal         *message);
size_t mpaxos__proposal__get_packed_size
                     (const Mpaxos__Proposal   *message);
size_t mpaxos__proposal__pack
                     (const Mpaxos__Proposal   *message,
                      uint8_t             *out);
size_t mpaxos__proposal__pack_to_buffer
                     (const Mpaxos__Proposal   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__Proposal *
       mpaxos__proposal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__proposal__free_unpacked
                     (Mpaxos__Proposal *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__ResponseT methods */
void   mpaxos__response_t__init
                     (Mpaxos__ResponseT         *message);
size_t mpaxos__response_t__get_packed_size
                     (const Mpaxos__ResponseT   *message);
size_t mpaxos__response_t__pack
                     (const Mpaxos__ResponseT   *message,
                      uint8_t             *out);
size_t mpaxos__response_t__pack_to_buffer
                     (const Mpaxos__ResponseT   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__ResponseT *
       mpaxos__response_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__response_t__free_unpacked
                     (Mpaxos__ResponseT *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgCommon methods */
void   mpaxos__msg_common__init
                     (Mpaxos__MsgCommon         *message);
size_t mpaxos__msg_common__get_packed_size
                     (const Mpaxos__MsgCommon   *message);
size_t mpaxos__msg_common__pack
                     (const Mpaxos__MsgCommon   *message,
                      uint8_t             *out);
size_t mpaxos__msg_common__pack_to_buffer
                     (const Mpaxos__MsgCommon   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgCommon *
       mpaxos__msg_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_common__free_unpacked
                     (Mpaxos__MsgCommon *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgPrepare methods */
void   mpaxos__msg_prepare__init
                     (Mpaxos__MsgPrepare         *message);
size_t mpaxos__msg_prepare__get_packed_size
                     (const Mpaxos__MsgPrepare   *message);
size_t mpaxos__msg_prepare__pack
                     (const Mpaxos__MsgPrepare   *message,
                      uint8_t             *out);
size_t mpaxos__msg_prepare__pack_to_buffer
                     (const Mpaxos__MsgPrepare   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgPrepare *
       mpaxos__msg_prepare__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_prepare__free_unpacked
                     (Mpaxos__MsgPrepare *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgPromise methods */
void   mpaxos__msg_promise__init
                     (Mpaxos__MsgPromise         *message);
size_t mpaxos__msg_promise__get_packed_size
                     (const Mpaxos__MsgPromise   *message);
size_t mpaxos__msg_promise__pack
                     (const Mpaxos__MsgPromise   *message,
                      uint8_t             *out);
size_t mpaxos__msg_promise__pack_to_buffer
                     (const Mpaxos__MsgPromise   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgPromise *
       mpaxos__msg_promise__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_promise__free_unpacked
                     (Mpaxos__MsgPromise *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgAccept methods */
void   mpaxos__msg_accept__init
                     (Mpaxos__MsgAccept         *message);
size_t mpaxos__msg_accept__get_packed_size
                     (const Mpaxos__MsgAccept   *message);
size_t mpaxos__msg_accept__pack
                     (const Mpaxos__MsgAccept   *message,
                      uint8_t             *out);
size_t mpaxos__msg_accept__pack_to_buffer
                     (const Mpaxos__MsgAccept   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgAccept *
       mpaxos__msg_accept__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_accept__free_unpacked
                     (Mpaxos__MsgAccept *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgAccepted methods */
void   mpaxos__msg_accepted__init
                     (Mpaxos__MsgAccepted         *message);
size_t mpaxos__msg_accepted__get_packed_size
                     (const Mpaxos__MsgAccepted   *message);
size_t mpaxos__msg_accepted__pack
                     (const Mpaxos__MsgAccepted   *message,
                      uint8_t             *out);
size_t mpaxos__msg_accepted__pack_to_buffer
                     (const Mpaxos__MsgAccepted   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgAccepted *
       mpaxos__msg_accepted__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_accepted__free_unpacked
                     (Mpaxos__MsgAccepted *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgLearn methods */
void   mpaxos__msg_learn__init
                     (Mpaxos__MsgLearn         *message);
size_t mpaxos__msg_learn__get_packed_size
                     (const Mpaxos__MsgLearn   *message);
size_t mpaxos__msg_learn__pack
                     (const Mpaxos__MsgLearn   *message,
                      uint8_t             *out);
size_t mpaxos__msg_learn__pack_to_buffer
                     (const Mpaxos__MsgLearn   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgLearn *
       mpaxos__msg_learn__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_learn__free_unpacked
                     (Mpaxos__MsgLearn *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgDecide methods */
void   mpaxos__msg_decide__init
                     (Mpaxos__MsgDecide         *message);
size_t mpaxos__msg_decide__get_packed_size
                     (const Mpaxos__MsgDecide   *message);
size_t mpaxos__msg_decide__pack
                     (const Mpaxos__MsgDecide   *message,
                      uint8_t             *out);
size_t mpaxos__msg_decide__pack_to_buffer
                     (const Mpaxos__MsgDecide   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgDecide *
       mpaxos__msg_decide__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_decide__free_unpacked
                     (Mpaxos__MsgDecide *message,
                      ProtobufCAllocator *allocator);
/* Mpaxos__MsgSlot methods */
void   mpaxos__msg_slot__init
                     (Mpaxos__MsgSlot         *message);
size_t mpaxos__msg_slot__get_packed_size
                     (const Mpaxos__MsgSlot   *message);
size_t mpaxos__msg_slot__pack
                     (const Mpaxos__MsgSlot   *message,
                      uint8_t             *out);
size_t mpaxos__msg_slot__pack_to_buffer
                     (const Mpaxos__MsgSlot   *message,
                      ProtobufCBuffer     *buffer);
Mpaxos__MsgSlot *
       mpaxos__msg_slot__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mpaxos__msg_slot__free_unpacked
                     (Mpaxos__MsgSlot *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mpaxos__ProcessidT_Closure)
                 (const Mpaxos__ProcessidT *message,
                  void *closure_data);
typedef void (*Mpaxos__InstidT_Closure)
                 (const Mpaxos__InstidT *message,
                  void *closure_data);
typedef void (*Mpaxos__RoundidT_Closure)
                 (const Mpaxos__RoundidT *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgHeader_Closure)
                 (const Mpaxos__MsgHeader *message,
                  void *closure_data);
typedef void (*Mpaxos__CodedValueT_Closure)
                 (const Mpaxos__CodedValueT *message,
                  void *closure_data);
typedef void (*Mpaxos__Proposal_Closure)
                 (const Mpaxos__Proposal *message,
                  void *closure_data);
typedef void (*Mpaxos__ResponseT_Closure)
                 (const Mpaxos__ResponseT *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgCommon_Closure)
                 (const Mpaxos__MsgCommon *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgPrepare_Closure)
                 (const Mpaxos__MsgPrepare *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgPromise_Closure)
                 (const Mpaxos__MsgPromise *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgAccept_Closure)
                 (const Mpaxos__MsgAccept *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgAccepted_Closure)
                 (const Mpaxos__MsgAccepted *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgLearn_Closure)
                 (const Mpaxos__MsgLearn *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgDecide_Closure)
                 (const Mpaxos__MsgDecide *message,
                  void *closure_data);
typedef void (*Mpaxos__MsgSlot_Closure)
                 (const Mpaxos__MsgSlot *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    mpaxos__ack_enum__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__processid_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__instid_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__roundid_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_header__descriptor;
extern const ProtobufCEnumDescriptor    mpaxos__msg_header__msgtype_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__coded_value_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__proposal__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__response_t__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_common__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_prepare__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_promise__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_accept__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_accepted__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_learn__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_decide__descriptor;
extern const ProtobufCMessageDescriptor mpaxos__msg_slot__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_mpaxos_2eproto__INCLUDED */
